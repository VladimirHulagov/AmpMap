# Generated by Django 4.2.13 on 2025-02-04 15:37

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('tests_representation', '0035_testresult_results_histogram_idx'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='test',
            name='tests_count_decrement_statistics_on_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='test',
            name='tests_count_increment_statistics_on_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='test',
            name='tests_count_decrement_statistics_on_delete',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='testplan',
            name='plans_count_decrement_statistics_on_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='testplan',
            name='plans_count_increment_statistics_on_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='testplan',
            name='plans_count_decrement_statistics_on_delete',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_decrement_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NEW."is_deleted" AND NOT OLD."is_deleted" AND NOT OLD."is_archive") OR (NEW."is_archive" AND NOT OLD."is_archive" AND NOT OLD."is_deleted"))', func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count - 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='83a6680035afaca6b917737772d25029782e6ed3', operation='UPDATE', pgid='pgtrigger_tests_count_decrement_statistics_on_update_802f6', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_increment_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NOT NEW."is_deleted" AND OLD."is_deleted" AND NOT NEW."is_archive") OR (NOT NEW."is_archive" AND OLD."is_archive" AND NOT NEW."is_deleted"))', func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='03b42438c597dd20b58171b8bb09b9d3116bd710', operation='UPDATE', pgid='pgtrigger_tests_count_increment_statistics_on_update_804b1', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_decrement_statistics_on_delete', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (NOT OLD."is_archive" AND NOT OLD."is_deleted")', func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count - 1 \n            WHERE project_id = OLD.project_id;\n            RETURN OLD;\n            ', hash='600a7a6f8cde12e453f453c792478f7a5d4805de', operation='DELETE', pgid='pgtrigger_tests_count_decrement_statistics_on_delete_1c9f2', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_decrement_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NEW."is_deleted" AND NOT OLD."is_deleted" AND NOT OLD."is_archive") OR (NEW."is_archive" AND NOT OLD."is_archive" AND NOT OLD."is_deleted"))', func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count - 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='f5b411430955899c70ce44e3a2edcb6661a367ae', operation='UPDATE', pgid='pgtrigger_plans_count_decrement_statistics_on_update_60350', table='tests_representation_testplan', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_increment_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NOT NEW."is_deleted" AND OLD."is_deleted" AND NOT NEW."is_archive") OR (NOT NEW."is_archive" AND OLD."is_archive" AND NOT NEW."is_deleted"))', func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='70aa1321057cba626695b86b5e7c792d4591613e', operation='UPDATE', pgid='pgtrigger_plans_count_increment_statistics_on_update_eb93a', table='tests_representation_testplan', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_decrement_statistics_on_delete', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (NOT OLD."is_archive" AND NOT OLD."is_deleted")', func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count - 1 \n            WHERE project_id = OLD.project_id;\n            RETURN OLD;\n            ', hash='e9b457dc138bc2ad4cf4e158125fd14867a6c0e5', operation='DELETE', pgid='pgtrigger_plans_count_decrement_statistics_on_delete_97d57', table='tests_representation_testplan', when='BEFORE')),
        ),
    ]
